# -*- coding: utf-8 -*-
"""tp modelos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PgRcSiasDgZU7k6SwY37siMu5cUhp9Uc
"""

def do_e(row, graph):
  values = []
  current = ""
  for col in row:
    if (col != " " and col != "e"):
      current += col
    elif (col == " " and current != ""):
      values.append(int(current))
      current = ""
  values.append(int(current))
  if (values[0] not in graph):
    graph[values[0]] = []
  if (values[1] not in graph):
    graph[values[1]] = []
  if (values[1] not in graph[values[0]]):
    graph[values[0]].append(values[1])
  if (values[0] not in graph[values[1]]):
    graph[values[1]].append(values[0])
  return graph

def identify(tipo, row, graph):
  if (tipo == "e"):
    graph = do_e(row, graph)
  return graph

def cargar_matriz(route, graph):
  file = open(route, "r")
  for r in file: 
    graph = identify(r[0], r, graph)
  file.close()
  return graph

import random
import threading

def multi_threading(graph):
   global tandas_finales
   tandas_finales = []
   threads = []
   for i in range(0, 100):
     t = threading.Thread(target=setup_tandas, args=[graph])
     t.start()
     threads.append(t)
   for thread in threads:
      thread.join()
   tanda_final = []
   for tanda in tandas_finales:
     if (len(tanda_final) == 0):
       tanda_final = tanda
     elif (len(tanda) < len(tanda_final)):
       print("final " + str(len(tanda)) + "\t")
       tanda_final = tanda
   return tanda_final

def setup_tandas(graph):
  tandas = []
  tandas_temp = []
  skip = []
  items = list(graph.items())
  
  
  for i in range(0,1000):
    random.shuffle(items)
    for item in items:
      lavar = []
      lavar.append(item[0])
      if (item[0] in skip):
        continue
      for item2 in items:
        if (item[0] != item2[0] and item2[0] not in item[1] and item2[0] not in skip):
          any_present = False
          for value in item2[1]:
            if (value in lavar):
              any_present = True
              break
          if (not any_present):
            lavar.append(item2[0])
            skip.append(item2[0])
      skip.append(item[0])
      tandas_temp.append(lavar)
    if (len(tandas) == 0):
      tandas = tandas_temp
    elif (len(tandas_temp) < len(tandas)):
      tandas = tandas_temp
  tandas_finales.append(tandas)
  return tandas

graph = {}
graph = cargar_matriz("segundo_problema.txt", graph)
tandas = multi_threading(graph)
print(tandas)
f = open("entrega_2.txt", "w")
for i in range(0, len(tandas)):
  for value in tandas[i]:
    f.write(str(value) + " " + str(i+1) + "\n")
f.close()